package simulator.model;

import java.util.List;
import simulator.misc.*;

public class NewtonUniversalGravitation implements ForceLaws {

	private double G;
	
	public NewtonUniversalGravitation(double G) {
		if(G < 0) {
			throw new IllegalArgumentException("G value is non-positive");
		}
		this.G = G;
	}
	
	@Override
	public void apply(List<Body> bs) {
	
		Vector2D zero = new Vector2D(); // Vector (0,0)
		Vector2D F = new Vector2D(); // Fuerza total
		
		Vector2D dir = new Vector2D(); // Direccion auxiliar
		double f;
		
		for(int i = 0; i < bs.size(); i++) {
			
			if(bs.get(i).getMass() != 0){
			
			for(int j = 0; j < bs.size(); i++) {
				
				if(bs.get(i) != bs.get(j)) { // Comprueba que no es el mismo cuerpo
					
					if(bs.get(j).getPosition().distanceTo(bs.get(i).getPosition()) == 0) {
						
					}
					else {
					 f = (G * bs.get(i).getMass() * bs.get(j).getMass() / Math.pow(bs.get(i).getPosition().distanceTo(bs.get(j).getPosition()), 2));
					 dir = bs.get(j).getPosition().minus(bs.get(i).getPosition());
					 bs.get(i).addForce(dir.direction().scale(f));
					}
					
					}
			 	}
			}
		}
	}
}
